{"version":3,"file":"static/js/146.80d8f6f1.chunk.js","mappings":"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","sources":["../node_modules/nanoid/index.browser.js","components/ContactForm/ContactForm.jsx","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","pages/ContactsPage.jsx"],"sourcesContent":["export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","import { useState } from 'react';\nimport { nanoid } from 'nanoid';\nimport { addContact } from '../../redux/operations';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectContactsItems } from '../../redux/selectors';\n\nexport default function ContactForm() {\n  const contacts = useSelector(selectContactsItems);\n  const dispatch = useDispatch();\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = e => {\n    switch (e.target.name) {\n      case 'name':\n        setName(e.target.value);\n        break;\n      case 'number':\n        setNumber(e.target.value);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const createContact = e => {\n    e.preventDefault();\n    if (\n      contacts.find(contact => {\n        return contact.name === name.trim();\n      })\n    ) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n    const newContact = {\n      name: name.trim(),\n      number: number.trim(),\n      id: nanoid(),\n    };\n\n    setName('');\n    setNumber('');\n\n    dispatch(addContact(newContact));\n  };\n\n  return (\n    <>\n      <form onSubmit={createContact}>\n        <label htmlFor=\"name\">\n          {' '}\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            value={name}\n            onChange={handleChange}\n            required\n          />\n        </label>\n        <label htmlFor=\"number\">\n          {' '}\n          Number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            value={number}\n            onChange={handleChange}\n            required\n          />\n        </label>\n        <button type=\"submit\">\n          Add contact\n        </button>\n      </form>\n      <hr/>\n    </>\n  );\n}","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact, editContact } from '../../redux/operations';\n\nexport const ContactListItem = ({ contact }) => {\n  const dispatch = useDispatch();\n  const [isEditMode, setIsEditMode] = useState(false);\n  const [name, setName] = useState(contact.name);\n  const [phone, setPhone] = useState(contact.number);\n\n  const handleChange = e => {\n    switch (e.target.name) {\n      case 'name':\n        setName(e.target.value);\n        break;\n      case 'phone':\n        setPhone(e.target.value);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const handleEditMode = () => {\n    setIsEditMode(prevState => !prevState);\n\n    if (isEditMode) {\n      const editedContact = {\n        name: name.trim(),\n        number: phone.trim(),\n        id: contact.id,\n      };\n      dispatch(editContact(editedContact));\n    }\n  };\n\n  return (\n    <li>\n      {isEditMode ? (\n        <div>\n          <input type=\"text\" name=\"name\" value={name} onChange={handleChange} />\n          <input\n            type=\"text\"\n            name=\"phone\"\n            value={phone}\n            onChange={handleChange}\n          />\n        </div>\n      ) : (\n        <span>{`${contact.name}: ${contact.number}`}</span>\n      )}\n      <div>\n        <button type=\"button\" onClick={handleEditMode}>\n          {isEditMode ? 'Save' : 'Edit'}\n        </button>\n        <button\n          type=\"button\"\n          onClick={() => dispatch(deleteContact(contact.id))}\n        >\n          Delete\n        </button>\n      </div>\n    </li>\n  );\n};","import { selectFilteredContacts } from '../../redux/selectors';\nimport { ContactListItem } from '../ContactListItem/ContactListItem';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { fetchContacts } from '../../redux/operations';\n\nexport default function ContactList() {\n  const contacts = useSelector(selectFilteredContacts);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <ul>\n      {contacts.map(contact => {\n        return <ContactListItem contact={contact} key={contact.id} />;\n      })}\n    </ul>\n  );\n}","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectFilterValue } from '../../redux/selectors';\nimport { setFilterValue } from '../../redux/filterSlice';\n\nexport default function Filter() {\n  const value = useSelector(selectFilterValue);\n  const dispatch = useDispatch();\n\n  const handleChange = (e) => {\n    dispatch(setFilterValue(e.target.value))\n  }\n\n\n  return (\n    <div>\n      <label>\n        {' '}\n        Find contacts by name:\n        <input\n          type=\"text\"\n          name=\"filter\"\n          title=\"Enter first letters or numbers\"\n          placeholder='Enter first letters'\n          value={value}\n          onChange={handleChange}\n        />\n      </label>\n    </div>\n  );\n}\n\n","import ContactForm from 'components/ContactForm/ContactForm';\nimport ContactList from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\nimport React from 'react';\nimport { Audio } from 'react-loader-spinner';\nimport { useSelector } from 'react-redux';\nimport { selectUserError, selectUserIsLoading } from '../redux/selectors';\n\nconst ContactsPage = () => {\n    const error = useSelector(selectUserError);\n    const isLoading = useSelector(selectUserIsLoading);\n  return (\n    <>\n      <ContactForm />\n\n      <h2>Contacts</h2>\n      <Filter />\n      {error !== null && <p>Oops, an error has occurred...</p>}\n      {isLoading && (\n        <Audio height=\"80\" width=\"80\" color=\"grey\" ariaLabel=\"loading\" />\n      )}\n      <ContactList />\n    </>\n  );\n};\n\nexport default ContactsPage;"],"names":["nanoid","size","crypto","getRandomValues","Uint8Array","reduce","id","byte","toString","toUpperCase","ContactForm","contacts","useSelector","selectContactsItems","dispatch","useDispatch","useState","name","setName","number","setNumber","handleChange","e","target","value","onSubmit","preventDefault","find","contact","trim","alert","newContact","addContact","htmlFor","type","pattern","title","onChange","required","ContactListItem","isEditMode","setIsEditMode","phone","setPhone","onClick","prevState","editedContact","editContact","deleteContact","ContactList","selectFilteredContacts","useEffect","fetchContacts","map","Filter","selectFilterValue","placeholder","setFilterValue","error","selectUserError","isLoading","selectUserIsLoading","height","width","color","ariaLabel"],"sourceRoot":""}