{"version":3,"file":"static/js/73.0ffbc909.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.jsx","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","pages/ContactsPage.jsx"],"sourcesContent":["import { Box, Button, FormControl, FormLabel, Input } from '@chakra-ui/react';\nimport { useState } from 'react';\nimport { nanoid } from 'nanoid';\nimport { addContact } from '../../redux/operations';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectContactsItems } from '../../redux/selectors';\n\nexport default function ContactForm() {\n  const contacts = useSelector(selectContactsItems);\n  const dispatch = useDispatch();\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = (e) => {\n    switch (e.target.name) {\n      case 'name':\n        setName(e.target.value);\n        break;\n      case 'number':\n        setNumber(e.target.value);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const createContact = (e) => {\n    e.preventDefault();\n    if (\n      contacts.find((contact) => {\n        return contact.name === name.trim();\n      })\n    ) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n    const newContact = {\n      name: name.trim(),\n      number: number.trim(),\n      id: nanoid(),\n    };\n\n    setName('');\n    setNumber('');\n\n    dispatch(addContact(newContact));\n  };\n\n  return (\n    <Box mt={4}>\n      <form onSubmit={createContact}>\n        <FormControl>\n          <FormLabel>Name</FormLabel>\n          <Input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            value={name}\n            onChange={handleChange}\n            required\n          />\n        </FormControl>\n        <FormControl mt={2}>\n          <FormLabel>Number</FormLabel>\n          <Input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            value={number}\n            onChange={handleChange}\n            required\n          />\n        </FormControl>\n        <Button mt={4} colorScheme=\"teal\" type=\"submit\">\n          Add contact\n        </Button>\n      </form>\n      <hr />\n    </Box>\n  );\n}\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact, editContact } from '../../redux/operations';\n\nexport const ContactListItem = ({ contact }) => {\n  const dispatch = useDispatch();\n  const [isEditMode, setIsEditMode] = useState(false);\n  const [name, setName] = useState(contact.name);\n  const [phone, setPhone] = useState(contact.number);\n\n  const handleChange = e => {\n    switch (e.target.name) {\n      case 'name':\n        setName(e.target.value);\n        break;\n      case 'phone':\n        setPhone(e.target.value);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const handleEditMode = () => {\n    setIsEditMode(prevState => !prevState);\n\n    if (isEditMode) {\n      const editedContact = {\n        name: name.trim(),\n        number: phone.trim(),\n        id: contact.id,\n      };\n      dispatch(editContact(editedContact));\n    }\n  };\n\n  return (\n    <li>\n      {isEditMode ? (\n        <div>\n          <input type=\"text\" name=\"name\" value={name} onChange={handleChange} />\n          <input\n            type=\"text\"\n            name=\"phone\"\n            value={phone}\n            onChange={handleChange}\n          />\n        </div>\n      ) : (\n        <span>{`${contact.name}: ${contact.number}`}</span>\n      )}\n      <div>\n        <button type=\"button\" onClick={handleEditMode}>\n          {isEditMode ? 'Save' : 'Edit'}\n        </button>\n        <button\n          type=\"button\"\n          onClick={() => dispatch(deleteContact(contact.id))}\n        >\n          Delete\n        </button>\n      </div>\n    </li>\n  );\n};\n","import { Box, UnorderedList, ListItem } from '@chakra-ui/react';\nimport { selectFilteredContacts } from '../../redux/selectors';\nimport { ContactListItem } from '../ContactListItem/ContactListItem';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { fetchContacts } from '../../redux/operations';\n\nexport default function ContactList() {\n  const contacts = useSelector(selectFilteredContacts);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Box mt={4}>\n      <UnorderedList listStyleType=\"none\" p={0}>\n        {contacts.map((contact) => (\n          <ListItem key={contact.id} mb={2}>\n            <ContactListItem contact={contact} />\n          </ListItem>\n        ))}\n      </UnorderedList>\n    </Box>\n  );\n}\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectFilterValue } from '../../redux/selectors';\nimport { setFilterValue } from '../../redux/filterSlice';\n\nexport default function Filter() {\n  const value = useSelector(selectFilterValue);\n  const dispatch = useDispatch();\n\n  const handleChange = (e) => {\n    dispatch(setFilterValue(e.target.value))\n  }\n\n\n  return (\n    <div>\n      <label>\n        {' '}\n        Find contacts by name:\n        <input\n          type=\"text\"\n          name=\"filter\"\n          title=\"Enter first letters or numbers\"\n          placeholder='Enter first letters'\n          value={value}\n          onChange={handleChange}\n        />\n      </label>\n    </div>\n  );\n}\n","import ContactForm from 'components/ContactForm/ContactForm';\nimport ContactList from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\nimport React from 'react';\nimport { Audio } from 'react-loader-spinner';\nimport { useSelector } from 'react-redux';\nimport { selectUserError, selectUserIsLoading } from '../redux/selectors';\n\nconst ContactsPage = () => {\n    const error = useSelector(selectUserError);\n    const isLoading = useSelector(selectUserIsLoading);\n  return (\n    <>\n      <ContactForm />\n\n      <h2>Contacts</h2>\n      <Filter />\n      {error !== null && <p>Oops, an error has occurred...</p>}\n      {isLoading && (\n        <Audio height=\"80\" width=\"80\" color=\"grey\" ariaLabel=\"loading\" />\n      )}\n      <ContactList />\n    </>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["ContactForm","contacts","useSelector","selectContactsItems","dispatch","useDispatch","useState","name","setName","number","setNumber","handleChange","e","target","value","mt","onSubmit","preventDefault","find","contact","trim","alert","newContact","id","nanoid","addContact","I","type","pattern","title","onChange","required","colorScheme","ContactListItem","isEditMode","setIsEditMode","phone","setPhone","onClick","prevState","editedContact","editContact","deleteContact","ContactList","selectFilteredContacts","useEffect","fetchContacts","listStyleType","p","map","mb","Filter","selectFilterValue","placeholder","setFilterValue","error","selectUserError","isLoading","selectUserIsLoading","height","width","color","ariaLabel"],"sourceRoot":""}